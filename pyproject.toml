[project]
name = "NachonekoBot"
version = "2.0.0"
description = "A telegram bot framework for building bots with ease, featuring a modular architecture and support for various plugins."
authors = [
    { name = "github", email = "kimmyxyc@nepnep.moe" },
]
dependencies = [
    "pyTelegramBotAPI>=4.27.0",
    "asgiref>=3.8.1",
    "loguru>=0.7.3",
    "requests>=2.32.4",
    "PyYAML>=6.0.2",
    "elara>=0.5.5",
    "asyncpg>=0.30.0",
    "idna>=3.10",
    "aiohttp>=3.12.12",
    "pillow>=11.2.1",
    "cryptography>=45.0.4",
    "numpy>=2.3.0",
    "pandas>=2.3.0",
    "psutil>=7.0.0",
    "pytz>=2025.2",
    "python-dotenv>=1.1.0",
    "pydantic>=2.11.6",
    "pydantic-settings>=2.9.1",
    "dynaconf>=3.2.11",
    "dnspython>=2.7.0",
    "scapy>=2.6.1",
    "easyocr>=1.7.2",
    "binance-connector>=3.12.0",
    "xmltodict>=0.14.2",
]



requires-python = ">=3.11"
readme = "README.md"
license = { text = "MIT" }


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".idea",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
